scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
pd <- position_dodge(5)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = pd) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(0.5)) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(1)) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(2)) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(alpha = 0.5) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(1, 1), alpha = 0.5) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(2, 2), alpha = 0.5) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(2, 5), alpha = 0.5) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_point(position = position_jitter(2, 5), alpha = 0.5) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_point(position = position_jitter(2, 50), alpha = 0.5) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_point(position = position_jitter(2, 100), alpha = 0.5) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(2, 100), alpha = 0.5) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(2, 100), alpha = 0.2) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
dane,
aes(wielkosc, cena)
) +
geom_jitter(position = position_jitter(2, 100), alpha = 0.25) +
geom_smooth(aes(color = "1"), method = "lm") +
geom_smooth(aes(color = "2"), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(aes(color = "6"), method = "lm", formula = y ~ poly(x, 6)) +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 5000, 500)
) +
scale_colour_manual(
name = "Stopień wielomianu",
values = c("1" = "red", "2" = "green", "6" = "blue")
) +
ggtitle("Zależność ceny od metrażu") +
theme(
plot.title = element_text(face = "bold"),
legend.background = element_blank(),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.position = c(0.1, 0.9)
)
ggplot(
sprawdzenie01,
aes(wielkosc, cena)
) +
geom_poiint
geom_smooth(method = "lm", color = "red") +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 1500, 100)
) +
ggtitle("Zależność ceny od metrażu") +
theme(plot.title = element_text(face = "bold"))
ggplot(
sprawdzenie01,
aes(wielkosc, cena)
) +
geom_point() +
geom_smooth(method = "lm", color = "red") +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 1500, 100)
) +
ggtitle("Zależność ceny od metrażu") +
theme(plot.title = element_text(face = "bold"))
ggplot(
sprawdzenie01,
aes(wielkosc, cena)
) +
geom_point(position = position_jitter(2, 100), alpha = 0.25) +
geom_smooth(method = "lm", color = "red") +
scale_x_continuous(
expression("wielkość [m"^{2}*"]"),
breaks = seq(0, 100, 10)
) +
scale_y_continuous(
"cena [PLN]",
breaks = seq(0, 1500, 100)
) +
ggtitle("Zależność ceny od metrażu") +
theme(plot.title = element_text(face = "bold"))
shiny::runApp('tuatara_app')
shiny::runApp('tuatara_app')
1024*4
shiny::runApp('tuatara_app')
dane <- read_csv("dane.csv")
library(dplyr)
library(readr)
dane <- read_csv("dane.csv")
dane <-
dane %>%
mutate(
lokalizacja = lokalizacja %>%
stri_replace_first_regex(", Warszawa", "") %>%
as.factor(),
do_wynajecia_przez = do_wynajecia_przez %>% as.factor(),
parking = parking %>% as.factor(),
liczba_pokoi = liczba_pokoi %>% as.factor(),
rodzaj_nieruchomosci = rodzaj_nieruchomosci %>% as.factor(),
liczba_lazienek = liczba_lazienek %>% as.factor(),
palacy = palacy %>% as.factor(),
przyjazne_zwierzakom = przyjazne_zwierzakom %>% as.factor()
)
library(stringi)
dane <-
dane %>%
mutate(
lokalizacja = lokalizacja %>%
stri_replace_first_regex(", Warszawa", "") %>%
as.factor(),
do_wynajecia_przez = do_wynajecia_przez %>% as.factor(),
parking = parking %>% as.factor(),
liczba_pokoi = liczba_pokoi %>% as.factor(),
rodzaj_nieruchomosci = rodzaj_nieruchomosci %>% as.factor(),
liczba_lazienek = liczba_lazienek %>% as.factor(),
palacy = palacy %>% as.factor(),
przyjazne_zwierzakom = przyjazne_zwierzakom %>% as.factor()
)
dane %>% sapply(function(x) {x %>% levels %>% length()})
dane %>% sapply(function(x) {x %>% levels %>% length()}) + 1
dane %>% sapply(function(x) {x %>% levels %>% length()}) %>% plyr::mapvalues(0, 1)
dane %>% sapply(function(x) {x %>% levels %>% length()}) %>% plyr::mapvalues(0, 1) %>% sum()
dane %>% sapply(function(x) {x %>% levels %>% length()}) %>% plyr::mapvalues(0, 1) %>% sum() - dane %>% sapply(function(x) {x %>% levels %>% length()})
dane %>% sapply(function(x) {x %>% levels %>% length()}) %>% plyr::mapvalues(0, 1) %>% sum() - (dane %>% sapply(function(x) {x %>% levels %>% length()}))
dane %>% sapply(function(x) {x %>% levels %>% length()}) %>% plyr::mapvalues(0, 1) %>% sum() - (dane %>% sapply(function(x) {x %>% levels %>% length()}) %>% length())
shiny::runApp('tuatara_app')
runApp('~/Documents/tuatara/tuatara_app')
runApp('~/Documents/tuatara/tuatara_app')
rsconnect::setAccountInfo(name='krzyslom',
token='BC69E4DCEF4F823AAFBE059628CF71D7',
secret='/rOrRz8DrCVIFjyhvg6gXmzTO+yUWXc96P7SSJ8E')
runApp('~/Documents/tuatara/tuatara_app')
